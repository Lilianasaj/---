import base64
import os
from concurrent.futures import ThreadPoolExecutor


def encode_file(file_path):
    try:
        with open(file_path, 'rb') as f:
            binary_data = f.read()
        encoded = base64.b64encode(binary_data).decode('utf-8')
        return (file_path, encoded, None)
    except Exception as e:
        return (file_path, None, str(e))


def main():
    files = [f for f in os.listdir() if os.path.isfile(f)][:5]  # Первые 5 файлов

    print(f"Кодирование {len(files)} файлов в Base64...")

    with ThreadPoolExecutor(max_workers=3) as executor:
        results = list(executor.map(encode_file, files))

    for file_path, encoded, error in results:
        if error:
            print(f" {file_path}: Ошибка - {error}")
        else:
            print(f"{file_path}: {len(encoded)} символов")


if __name__ == "__main__":
    main()
